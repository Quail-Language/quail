; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Quail"
#define MyAppVersion "2.0"
#define MyAppPublisher "Tapeline"
#define MyAppURL "https://quail-language.github.io"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{5C0DC728-B5E0-4382-AF6C-B3FB15E139AB}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DisableDirPage=no
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=winsetup
Compression=lzma
SolidCompression=yes
WizardStyle=modern
ChangesEnvironment=yes

[Registry]
Root: "HKLM"; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; ValueType: string; ValueName: "QUAIL_HOME"; ValueData: "{app}"; Flags: createvalueifdoesntexist preservestringtype

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Icons]
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"

[Files]
Source: "{tmp}\jdk.zip"; DestDir: "{app}"; Flags: external deleteafterinstall; ExternalSize: 225722368; Components: java
Source: "7za.exe"; DestDir: "{app}"; Flags: deleteafterinstall
Source: "{tmp}\qre.jar"; DestDir: "{app}"; Flags: external; ExternalSize: 5000000; Components: qre
Source: "{tmp}\qdk.jar"; DestDir: "{app}"; Flags: external; ExternalSize: 8000000; Components: qdk
Source: "quail.bat"; DestDir: "C:\Windows\";
Source: "quail-qdk.bat"; DestDir: "C:\Windows\"; Components: qdk;

[Types]
Name: "full"; Description: "Full installation"
Name: "compact"; Description: "Only-QRE installation"
Name: "custom"; Description: "Custom installation"; Flags: iscustom

[Components]
Name: "qre"; Description: "Quail Runtime Environment"; Types: full compact custom; Flags: fixed
Name: "qdk"; Description: "Quail Development Toolkit"; Types: full
Name: "java"; Description: "Java 8 Runtime Environment"; Types: full

[Run]
Filename: {app}\7za.exe; Parameters: "x ""{app}\jdk.zip"" -o""{app}\jre"" * -r -aoa"; Flags: runhidden runascurrentuser; Components: java

[UninstallDelete]
Type: filesandordirs; Name: "{app}\jre"

[Code]
var
  DownloadPage: TDownloadWizardPage;

function OnDownloadProgress(const Url, FileName: String; const Progress, ProgressMax: Int64): Boolean;
begin
  if Progress = ProgressMax then
    Log(Format('Successfully downloaded file to {tmp}: %s', [FileName]));
  Result := True;
end;

procedure InitializeWizard;
begin
  DownloadPage := CreateDownloadPage(SetupMessage(msgWizardPreparing), SetupMessage(msgPreparingDesc), @OnDownloadProgress);
end;

function NextButtonClick(CurPageID: Integer): Boolean;  
begin
  if (CurPageID = wpReady) then begin
    DownloadPage.Clear;
    // Use AddEx to specify a username and password   
    if WizardIsComponentSelected('java') then begin
      DownloadPage.Add('https://corretto.aws/downloads/resources/8.402.08.1/amazon-corretto-8.402.08.1-windows-x64-jdk.zip', 'jdk.zip', '');
    end;
    if WizardIsComponentSelected('qdk') then begin
      DownloadPage.Add('https://github.com/Quail-Language/quail/releases/latest/download/qdk.jar', 'qdk.jar', '');
    end;            
    DownloadPage.Add('https://github.com/Quail-Language/quail/releases/latest/download/qre.jar', 'qre.jar', '');
    DownloadPage.Show;
    try
      try
        DownloadPage.Download; // This downloads the files to {tmp}
        Result := True;
      except
        if DownloadPage.AbortedByUser then
          Log('Aborted by user.')
        else
          SuppressibleMsgBox(AddPeriod(GetExceptionMessage), mbCriticalError, MB_OK, IDOK);
        Result := False;
      end;
    finally
      DownloadPage.Hide;
    end;
  end else
    Result := True;
end;